# # Sample workflow for building and deploying a Next.js site to GitHub Pages
# #
# # To get started with Next.js see: https://nextjs.org/docs/getting-started
# #
# name: Build AppExert application to check build failures

# on:
#   # Runs on pushes targeting the default branch
#   push:

#   # Allows you to run this workflow manually from the Actions tab
#   workflow_dispatch:

# jobs:
#   # Build job
#   build:
#     runs-on: ubuntu-latest
#     steps:
#        # extract branch name
#       - name: Extract branch name
#         if: github.event_name != 'pull'
#         shell: bash
#         run: echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/})" >> "$GITHUB_ENV"
#         id: extract_branch

#       - name: Checkout
#         uses: actions/checkout@v3
#       - name: Detect package manager
#         id: detect-package-manager
#         run: |
#           if [ -f "${{ github.workspace }}/yarn.lock" ]; then
#             echo "manager=yarn" >> $GITHUB_OUTPUT
#             echo "command=install" >> $GITHUB_OUTPUT
#             echo "runner=yarn" >> $GITHUB_OUTPUT
#             exit 0
#           elif [ -f "${{ github.workspace }}/package.json" ]; then
#             echo "manager=npm" >> $GITHUB_OUTPUT
#             echo "command=ci" >> $GITHUB_OUTPUT
#             echo "runner=npx --no-install" >> $GITHUB_OUTPUT
#             exit 0
#           else
#             echo "Unable to determine package manager"
#             exit 1
#           fi
#       - name: Setup Node
#         uses: actions/setup-node@v3
#         with:
#           node-version: "14"
#           cache: ${{ steps.detect-package-manager.outputs.manager }}
#       - name: Restore cache
#         uses: actions/cache@v3
#         with:
#           path: |
#             .next/cache
#           # Generate a new cache whenever packages or source files change.
#           key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
#           # If source files changed but packages didn't, rebuild from a prior cache.
#           restore-keys: |
#             ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-
#       - name: Install dependencies
#         run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}
#       - name: Build with Next.js
#         run: ${{ steps.detect-package-manager.outputs.runner }} next build
#       - name: Deploy to Preview
#         run: |
#           if [ $BRANCH_NAME == 'develop' ]; then
#           echo "The branch name is" $BRANCH_NAME
#           env:
#             VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
#             VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
#           - uses: actions/checkout@v2
#           - steps:
#             - name: Install Vercel CLI
#               run: npm install --global vercel@latest
#             - name: Pull Vercel Environment Information
#               run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
#             - name: Build Project Artifacts
#               run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
#             - name: Deploy Project Artifacts to Vercel
#               run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}
#           fi